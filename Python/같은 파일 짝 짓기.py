import re
import unicodedata
from collections import defaultdict
"""
=================================================================
[1] 같은 파일끼리 짝지으려면 어떻게 해야할까?
0. 거북이.py
1. 고라니.py
2. 가장 큰 수.py 
3. 가장큰 수.py
4. ㄱㅏㅈㅏㅇ ㅋㅡㄴ ㅅㅜ.py  <<- 실제로는 "가장 큰 수.py"로 보이지만, decode()로 변환하면 자음/모음이 분리되어 있음.
5. 가 장 큰 수.py
6. 가장큰수.py

[2] 정상적인 이름인 "가장 큰 수.py"를 통해 [1]번 문제에서 2~6번 케이스를 검색하고 싶다면?  
=================================================================
"""
# [1] 같은 파일끼리 짝지으려면 어떻게 해야할까?

# 0. 파일 리스트 얻기
# 참고로 4번 인덱스는 자음/모음이 분리되어 있음. ex) r[4][0]을 출력하면 'ㄱ', r[4][1]을 출력하면 'ㅏ'가 나옴
r = ['거북이.py', '고라니.py', '가장 큰 수.py', '가장큰 수.py', '가장 큰 수.py', '가 장 큰 수.py', '가장큰수.py']

# 1. (식별하기 가장 쉬운 형태, 원본 파일) 형식으로 변경
tmp_list = []
for i in range(len(r)):
    tmp = r[i].replace(' ', '')
    tmp = unicodedata.normalize('NFC', tmp)
    tmp_list.append((tmp, r[i]))
print(tmp_list)  # [('가장큰수.py', '가장 큰 수.py'), ('가장큰수.py', '가장큰 수.py'), ('가장큰수.py', '가장 큰 수.py'), ...]


# 2. 키워드를 key로 두고, value에 원본 파일 이름을 넣는다.
tmp_dict = defaultdict(list)
for i in range(len(r)):
    tmp = tmp_list[i]
    tmp_dict[tmp[0]].append(tmp[1])
print(tmp_dict)  # {... , '가장큰수.py': ['가장 큰 수.py', '가장큰 수.py', '가장 큰 수.py', '가 장 큰 수.py', '가장큰수.py']})


# [2] 정상적인 이름인 "가장 큰 수.py"를 통해 [1]번 문제에서 2~6번 케이스를 검색하고 싶다면?
# ---> "가장 큰 수.py" ==> "가장큰수"로 변환시켜서 관련된 파일들을 모두 찾는다!
# ---> 즉, 컴퓨터 입장에서는 "가 장큰수"이든, "가장 큰 수"이든 똑같은 거로 인식하게 만든다.

